import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { ConnectButton } from '@rainbow-me/rainbowkit'
import { useAccount, useContractRead, useProvider, useSigner } from 'wagmi'
import Contract from '../../backend/artifacts/contracts/SimpleStorage.sol/SimpleStorage'
import { Button, Input, Text } from '@chakra-ui/react'
import { useEffect, useState } from 'react'
import { ethers } from 'ethers'

export default function Home() {
  const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3'
  const { address, isConnected } = useAccount()
  const provider = useProvider()
  const { data: signer } = useSigner()

  const [number, setNumber] = useState(0)
  const [favNumber, setFavNumber] = useState(0)

  useEffect(() => {
    if (isConnected) {
      getDatas()
    }
  }, [isConnected])

  const getDatas = async () => {
    const contract = new ethers.Contract(contractAddress, Contract.abi, provider)
    const favoriteNumber = await contract.retrieve()
    setFavNumber(favoriteNumber.toString())
  }

  const writeNumber = async () => {
    const contract = new ethers.Contract(contractAddress, Contract.abi, signer)
    const transaction = await contract.store(number)
    transaction.wait(1)
    getDatas()
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ConnectButton />
      {isConnected ? (
        <>
          <Text >Connected!</Text>
          <Text>Your favourite number is: {favNumber} OR {data.toString()}</Text>
          <Input placeholder="Your favourite number" onChange={(e) => setNumber(e.currentTarget.value)}></Input>
          <Button colorScheme='purple' onClick={() => writeNumber()}>Store</Button>
        </>
      ) : (
        <Text >Not Connected!</Text>
      )}


    </>
  )
}
